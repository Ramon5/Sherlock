/*
* Copyright (c) 2016, Ramon dos Santos Rodrigues
* Todos os direitos reservados.
*
* É permitida a redistribuição e o uso em formulários originais e binários, com ou sem modificação, desde que sejam cumpridas as
* seguintes condições:
*
* 1. Redistribuições do código-fonte devem manter o aviso de direitos autorais acima, esta lista de condições e a seguinte isenção.
*
* 2. As redistribuições em formato binário devem reproduzir o aviso de copyright acima, esta lista de condições ea seguinte isenção de 
* responsabilidade na documentação e / ou outros materiais fornecidos com a distribuição.
*
* 3. Nem o nome do detentor dos direitos autorais nem os nomes dos seus contribuidores podem ser utilizados para endossar ou promover 
* produtos derivados deste software sem autorização prévia específica por escrito.
*
* ESTE SOFTWARE É FORNECIDO PELOS DETENTORES DE COPYRIGHT E COLABORADORES "NO ESTADO EM QUE SE ENCONTRAM" E QUAISQUER GARANTIAS 
* EXPRESSAS OU IMPLÍCITAS, INCLUINDO, MAS NÃO SE LIMITANDO A, GARANTIAS IMPLÍCITAS DE COMERCIABILIDADE E ADEQUAÇÃO A UM PROPÓSITO 
* ESPECÍFICO. EM NENHUMA CIRCUNSTÂNCIA O PROPRIETÁRIO OU OS CONTRIBUIDORES SERÃO RESPONSÁVEIS POR QUAISQUER DANOS DIRETOS, INDIRETOS, 
* INCIDENTAIS, ESPECIAIS, EXEMPLARES OU CONSEQÜENCIAIS (INCLUINDO, MAS NÃO SE LIMITANDO À, AQUISIÇÃO DE BENS OU SERVIÇOS SUBSTITUTOS, 
* PERDA DE USO, DADOS OU LUCROS; OU INTERRUPÇÃO DE NEGÓCIOS), QUALQUER CAUSA E QUALQUER TEORIA DE RESPONSABILIDADE, SEJA POR CONTRATO, 
* RESPONSABILIDADE ESTRITA OU DANO (INCLUINDO NEGLIGÊNCIA OU QUALQUER OUTRA) DECORRENTE DE QUALQUER FORMA FORA DO USO DESTE SOFTWARE, 
* MESMO SE AVISADO DA POSSIBILIDADE DE TAIS DANOS.
*
 */
package view;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeSelectionModel;
import util.BookInfo;

/**
 *
 * @author root
 */
public class AjudaGUI extends javax.swing.JDialog {

    private URL url;
    private DefaultTreeModel model;

    /**
     * Creates new form AjudaGUI
     */
    public AjudaGUI(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Tutorial");
        criarNodes(top);
        model = new DefaultTreeModel(top);
        initComponents();
        painelAjuda.setEditable(false);
        tree.getSelectionModel().setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);
        renderIcons();
        //carregaAjuda("/tutorial/CredencialTwitter.html");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        painelOpcoes = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jScrollPane2 = new javax.swing.JScrollPane();
        painelAjuda = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ajuda");
        setModal(true);

        jPanel1.setBackground(new java.awt.Color(64, 64, 64));
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 5, 15));

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Tutorial.png"))); // NOI18N
        jPanel1.add(jLabel1);

        painelOpcoes.setLayout(new java.awt.BorderLayout());

        tree.setModel(model);
        tree.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                treeValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        painelOpcoes.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        painelAjuda.setContentType("text/html"); // NOI18N
        jScrollPane2.setViewportView(painelAjuda);
        painelAjuda.getAccessibleContext().setAccessibleParent(painelAjuda);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(painelOpcoes, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                    .addComponent(painelOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void treeValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_treeValueChanged
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) tree.getLastSelectedPathComponent();
        if (node != null) {
            Object nodeInfo = node.getUserObject();
            if (node.isLeaf()) {
                try {
                    BookInfo info = (BookInfo) nodeInfo;
                    painelAjuda.setPage(info.bookURL);
                } catch (IOException ex) {
                    Logger.getLogger(AjudaGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_treeValueChanged

    private void carregaAjuda(String link) {
        url = getClass().getResource(link);
        try {
            painelAjuda.setPage(url);
        } catch (IOException ex) {
            Logger.getLogger(AjudaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void criarNodes(DefaultMutableTreeNode top) {
        DefaultMutableTreeNode category = null;
        DefaultMutableTreeNode book = null;
        //autenticação
        category = new DefaultMutableTreeNode("Autenticação");
        top.add(category);
        book = new DefaultMutableTreeNode(new BookInfo("Credenciais Twitter", getClass().getResource("/tutorial/CredencialTwitter.html")));
        category.add(book);
        book = new DefaultMutableTreeNode(new BookInfo("Credenciais DropBox", getClass().getResource("/tutorial/CredenciaisDropBox.html")));
        category.add(book);
        //coleta
        category = new DefaultMutableTreeNode("Coleta");
        top.add(category);
        book = new DefaultMutableTreeNode(new BookInfo("Coleta em Tempo Real", getClass().getResource("/tutorial/ColetaTR.html")));
        category.add(book);
        book = new DefaultMutableTreeNode(new BookInfo("Coleta Retroativa", getClass().getResource("/tutorial/ColetaRetroativa.html")));
        category.add(book);
        book = new DefaultMutableTreeNode(new BookInfo("Retweets", getClass().getResource("/tutorial/Retweets.html")));
        category.add(book);
        //ferramentas
        category = new DefaultMutableTreeNode("Ferramentas");
        top.add(category);
        book = new DefaultMutableTreeNode(new BookInfo("WatsonToolkit", getClass().getResource("/tutorial/WatsonTool.html")));
        category.add(book);
        book = new DefaultMutableTreeNode(new BookInfo("Armazenamento na Nuvem", getClass().getResource("/tutorial/CloudStore.html")));
        category.add(book);
    }

    private void renderIcons() {
        try {
            BufferedImage image = ImageIO.read(getClass().getResource("/icons/books.png"));
            ImageIcon root = new ImageIcon(image);
            image = ImageIO.read(getClass().getResource("/icons/open.png"));
            ImageIcon open = new ImageIcon(image);
            image = ImageIO.read(getClass().getResource("/icons/page.png"));
            ImageIcon leaf = new ImageIcon(image);

            DefaultTreeCellRenderer renderer
                    = new DefaultTreeCellRenderer();
            renderer.setOpenIcon(open);
            renderer.setClosedIcon(root);
            renderer.setLeafIcon(leaf);

            tree.setCellRenderer(renderer);

        } catch (IOException ex) {
            Logger.getLogger(AjudaGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AjudaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AjudaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AjudaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AjudaGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(() -> {
            AjudaGUI dialog = new AjudaGUI(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane painelAjuda;
    private javax.swing.JPanel painelOpcoes;
    private javax.swing.JTree tree;
    // End of variables declaration//GEN-END:variables
}
